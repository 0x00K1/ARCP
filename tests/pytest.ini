[pytest]
# Pytest configuration for ARCP

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests
    integration: Integration tests  
    security: Security tests
    slow: Slow tests that take more than 30 seconds
    api: API endpoint tests
    models: Model validation tests
    utils: Utility function tests
    core: Core functionality tests
    auth: Authentication tests
    registry: Agent registry tests
    cleanup: Cleanup functionality tests
    storage: Storage adapter tests
    token: Token service tests
    middleware: Middleware tests
    health: Health check tests
    logging: Logging tests
    sanitizer: Security sanitizer tests

# Test execution
addopts = 
    --strict-markers
    --tb=short
    --disable-warnings
    --color=yes
    -ra
    
# Asyncio configuration
asyncio_mode = auto

# Logging configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src/arcp
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    */scripts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*Protocol.*:
    @abstractmethod

[coverage:html]
directory = htmlcov